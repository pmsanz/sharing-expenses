// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using SharingExpenses.DbContexts;

#nullable disable

namespace SharingExpenses.Migrations
{
    [DbContext(typeof(BaseDBContext))]
    partial class BaseDBContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.5")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("SharingExpenses.Models.DbModels.Expenses", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<decimal>("Cost")
                        .HasColumnType("decimal(5,2)");

                    b.Property<int?>("GroupsId")
                        .HasColumnType("int");

                    b.Property<int>("OwnerId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("GroupsId");

                    b.HasIndex("OwnerId");

                    b.ToTable("Expenses", "SharingExpenses");
                });

            modelBuilder.Entity("SharingExpenses.Models.DbModels.Groups", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Groups", "SharingExpenses");
                });

            modelBuilder.Entity("SharingExpenses.Models.DbModels.Payments", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<decimal?>("Amount")
                        .HasColumnType("decimal(5,2)");

                    b.Property<int>("FromUserId")
                        .HasColumnType("int");

                    b.Property<int?>("GroupsId")
                        .HasColumnType("int");

                    b.Property<int>("ToUserId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("FromUserId");

                    b.HasIndex("GroupsId");

                    b.HasIndex("ToUserId");

                    b.ToTable("Payments", "SharingExpenses");
                });

            modelBuilder.Entity("SharingExpenses.Models.DbModels.Users", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int?>("GroupsId")
                        .HasColumnType("int");

                    b.Property<string>("Lastname")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("GroupsId");

                    b.ToTable("User", "Config");
                });

            modelBuilder.Entity("SharingExpenses.Models.DbModels.Expenses", b =>
                {
                    b.HasOne("SharingExpenses.Models.DbModels.Groups", null)
                        .WithMany("Expenses")
                        .HasForeignKey("GroupsId");

                    b.HasOne("SharingExpenses.Models.DbModels.Users", "Owner")
                        .WithMany()
                        .HasForeignKey("OwnerId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("Owner");
                });

            modelBuilder.Entity("SharingExpenses.Models.DbModels.Payments", b =>
                {
                    b.HasOne("SharingExpenses.Models.DbModels.Users", "FromUser")
                        .WithMany()
                        .HasForeignKey("FromUserId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("SharingExpenses.Models.DbModels.Groups", null)
                        .WithMany("Payments")
                        .HasForeignKey("GroupsId");

                    b.HasOne("SharingExpenses.Models.DbModels.Users", "ToUser")
                        .WithMany()
                        .HasForeignKey("ToUserId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("FromUser");

                    b.Navigation("ToUser");
                });

            modelBuilder.Entity("SharingExpenses.Models.DbModels.Users", b =>
                {
                    b.HasOne("SharingExpenses.Models.DbModels.Groups", null)
                        .WithMany("Users")
                        .HasForeignKey("GroupsId");
                });

            modelBuilder.Entity("SharingExpenses.Models.DbModels.Groups", b =>
                {
                    b.Navigation("Expenses");

                    b.Navigation("Payments");

                    b.Navigation("Users");
                });
#pragma warning restore 612, 618
        }
    }
}
